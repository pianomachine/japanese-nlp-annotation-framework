[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jmmaf"
version = "1.0.0"
description = "A comprehensive framework for high-quality Japanese language data annotation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Ryo Yanagisawa", email = "ryo.yanagisawa@ogata-lab.org"},
]
keywords = [
    "japanese",
    "nlp",
    "annotation",
    "sentiment-analysis",
    "active-learning",
    "machine-learning",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: Japanese",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
    "scipy>=1.7.0",
    "torch>=1.9.0",
    "transformers>=4.20.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "tqdm>=4.62.0",
    "jsonlines>=2.0.0",
    "pyyaml>=5.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.0",
    "black>=21.7b0",
    "ruff>=0.1.0",
    "mypy>=0.910",
    "pre-commit>=2.15.0",
]
japanese = [
    "fugashi>=1.1.0",
    "ipadic>=1.0.0",
    "mecab-python3>=1.0.3",
    "sudachipy>=0.6.0",
    "sudachidict-core>=20210802",
    "japanize-matplotlib>=1.1.3",
]
web = [
    "streamlit>=1.10.0",
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
]
annotation = [
    "labelbox>=3.0.0",
]
ml = [
    "onnx>=1.10.0",
    "onnxruntime>=1.9.0",
    "mlflow>=1.20.0",
    "wandb>=0.12.0",
]
docs = [
    "sphinx>=4.2.0",
    "sphinx-rtd-theme>=1.0.0",
]
all = [
    "jmmaf[dev,japanese,web,annotation,ml,docs]",
]

[project.urls]
Homepage = "https://github.com/pianomachine/japanese-nlp-annotation-framework"
Repository = "https://github.com/pianomachine/japanese-nlp-annotation-framework"
Issues = "https://github.com/pianomachine/japanese-nlp-annotation-framework/issues"
Documentation = "https://japanese-nlp-annotation-framework.readthedocs.io"

[project.scripts]
jmmaf-evaluate = "evaluate.quality_metrics:main"
jmmaf-benchmark = "models.benchmark_results:main"
jmmaf-active-learn = "annotation_tools.active_learning.uncertainty_sampling:main"
jmmaf-demo = "demo_visualization:main"

[tool.hatch.build.targets.wheel]
packages = ["jmmaf"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["jmmaf"]
omit = ["tests/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]